<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:aop="http://www.springframework.org/schema/aop"
xmlns:mvc="http://www.springframework.org/schema/mvc" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:p="http://www.springframework.org/schema/p" 
xmlns:context="http://www.springframework.org/schema/context"
xmlns:websocket="http://www.springframework.org/schema/websocket"
		xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
		http://www.springframework.org/schema/aop 
  http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.0.xsd 
		http://www.springframework.org/schema/websocket 
http://www.springframework.org/schema/websocket/spring-websocket-4.0.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	<!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 -->
	<context:component-scan base-package="cn.com.his.web.controller,cn.com.his.other.controller">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	
	
	
	
	<!-- 日期转换  必须放在<mvc:annotation-driven />前面 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"></bean>
	<mvc:annotation-driven />
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->  
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>
	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->  
   <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" >  
        <property name="prefix" value="/jsp"></property>  
        <property name="suffix" value=".jsp"></property>  
    </bean>  
    
    <!-- 上传文件，文件流转换 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    	<!-- 1024*200即200k，最大文件设置20mb -->
    	<property name="maxUploadSize" value="20480000"></property>
    	<!-- resolveLazily属性启用是为了推迟文件解析，以便在Action中捕获文件大小异常 -->
    	<property name="resolveLazily" value="true"></property>
    </bean>
    
    <mvc:interceptors>  
	    <mvc:interceptor>  
	    	<!-- 需要拦截的配置 -->
	    	<mvc:mapping path="/attributedetailController/**" />
	        <mvc:mapping path="/chargetypeController/**" />
	        <mvc:mapping path="/departmentController/**" />
	        <mvc:mapping path="/drugController/**" />
	        <mvc:mapping path="/employeeController/**" />
	        <mvc:mapping path="/patienttypeController/**" />
	        <mvc:mapping path="/registertypeController/**" />
	        <mvc:mapping path="/useunitController/**" />
	        <mvc:mapping path="/chargeController/**" />
	        <mvc:mapping path="/dispensingController/**" />
	        <mvc:mapping path="/medicalrecordController/**" />
	        <mvc:mapping path="/medicalrecordtemplateController/**" />
	        <mvc:mapping path="/prescriptionController/**" />
	        <mvc:mapping path="/prescriptiontemplateController/**" />
	        <mvc:mapping path="/patientController/**" />
	        <mvc:mapping path="/pegisterController/**" />
	        <mvc:mapping path="/resourceController/**" />
	        <mvc:mapping path="/roleController/**" />
	        <mvc:mapping path="/userinfoController/**" />
	        <!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->  
	        <bean class="cn.com.his.core.interceptor.CommonInterceptor" />
	    </mvc:interceptor>  
	</mvc:interceptors>  
	
	
		<!-- 开启aop，对类代理 -->
	<aop:config proxy-target-class="true"></aop:config>
	
	<!-- 开启shiro注解支持 -->
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

	
	
</beans>